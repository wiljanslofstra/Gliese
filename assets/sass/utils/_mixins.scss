
@mixin burger($width: 30px, $height: 5px, $gutter: 3px, $color: #000, $border-radius: 0, $transition-duration: .3s) {
  $burger-height: $height !global;
  $burger-gutter: $gutter !global;

  position: relative;
  margin-top: $height + $gutter;
  margin-bottom: $height + $gutter;

  user-select: none;

  &,
  &:before,
  &:after {
    display: block;
    background-color: $color;
    width: $width;
    height: $height;

    @if $border-radius != 0 {
      border-radius: $border-radius;
    }

    transition-property: background-color, transform;
    transition-duration: $transition-duration;
  }

  &:before,
  &:after {
    position: absolute;
    content: '';
  }

  &:before {
    top: -($height + $gutter);
  }

  &:after {
    top: $height + $gutter;
  }
}

@mixin burger-to-cross {
  & {
    background-color: transparent;
  }

  &:before {
    transform: translateY($burger-gutter + $burger-height) rotate(45deg);
  }

  &:after {
    transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
  }
}

@mixin selection($current-selector: false) {
  @if $current-selector {
    &::selection {
      @content;
    }
  }
  @else {
    ::selection {
      @content;
    }
  }
}

@mixin button-generator($map) {
  $border: map-get($map, 'border');
  $border-hover: map-get($map, 'border-hover');
  $border-active: map-get($map, 'border-active');
  $background: map-get($map, 'background');
  $background-hover: map-get($map, 'background-hover');
  $background-active: map-get($map, 'background-active');
  $color: map-get($map, 'color');
  $color-hover: map-get($map, 'color-hover');
  $color-active: map-get($map, 'color-active');
  $shadow: map-get($map, 'shadow');
  $gradient: map-get($map, 'gradient');
  $gradient-hover: map-get($map, 'gradient-hover');
  $gradient-active: map-get($map, 'gradient-active');
  $font-family: map-get($map, 'font-family');

  color: $color;
  background-color: $background;

  @if ($border != 0) {
    border: $border;
  }

  @if ($shadow) {
    box-shadow: $shadow;
  }

  @if ($gradient) {
    background-image: $gradient;
  }

  @if ($font-family) {
    font-family: $font-family;
  }

  // Hover and focus styles are shared
  &:hover,
  &:focus {
    color: $color-hover;
    background-color: $background-hover;

    @if ($border-hover != 0) {
      border: $border-hover;
    }

    @if ($gradient-hover != none) {
      background-image: $gradient-hover;
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    background-color: $background;
    border-color: $border;
  }

  &:active,
  &.active {
    color: $color-active;
    background-color: $background-active;
    box-shadow: 0;

    @if ($border-active != 0) {
      border: $border-active;
    }

    @if ($gradient-active != none) {
      background-image: $gradient-active;
    }
  }
}

@mixin hidpi($ratio: 1.3) {
  @media only screen and (min-resolution: round($ratio * 96dpi)),
    only screen and (min-resolution: $ratio * 1dppx) {
    @content;
  }
}

@mixin hide-text($height: null) {
  overflow: hidden;
  text-indent: 101%;
  white-space: nowrap;
}
