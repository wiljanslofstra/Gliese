@mixin background-image($file, $type, $width, $height) {
    background-image: url($file + '.' + $type);
    height: $height;
    width: $width;
}

@mixin background-image-2x($file, $type, $width, $height) {
    @include hidpi(2) {
        & {
            background-image: url($file + '@2x.' + $type);
            -webkit-background-size: $width $height;
            background-size: $width $height;
        }
    }
}

@mixin background-image-3x($file, $type, $width, $height) {
    @include hidpi(3) {
        & {
            background-image: url($file + '@3x.' + $type);
            -webkit-background-size: $width $height;
            background-size: $width $height;
        }
    }
}

@mixin opacity($opacity) {
    filter: alpha(opacity=($opacity * 100));
    opacity: $opacity;
}

@mixin arrow($position: bottom, $colour: #fff, $size: 10px) {
    position: relative;

    &:after {
        border: solid transparent;
        content: " ";
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
        border-color: rgba(255, 255, 255, 0);
        border-width: $size;
        z-index: 1;

        @if $position == top {
            bottom: 100%;
            left: 50%;
            margin-left: -$size;
        }
        @else if $position == left {
            right: 100%;
            top: 50%;
            margin-top: -$size;
        }
        @else if $position == right {
            left: 100%;
            top: 50%;
            margin-top: -$size;
        }
        @else {
            top: 100%;
            left: 50%;
            margin-left: -$size;
        }

        // Colour
        @if $position == top {
            border-bottom-color: $colour;
        }
        @else if $position == left {
            border-right-color: $colour;
        }
        @else if $position == right {
            border-left-color: $colour;
        }
        @else {
            border-top-color: $colour;
        }
    }

}
