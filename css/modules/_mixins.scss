@mixin background-image-retina($file, $type, $width, $height) {
  background-image: url($file + '.' + $type);
  height: $height;
  width: $width;
 
  @media (-webkit-min-device-pixel-ratio: 2), (-moz-min-device-pixel-ratio: 2) {
    & {
      background-image: url($file + '@2x.' + $type);
      -webkit-background-size: $width $height;
    }
  }
}

@mixin opacity($opacity: 0.5) {
    filter:         alpha(opacity=($opacity * 100));
    opacity:        $opacity;
}

@mixin transform($params) {
    -webkit-transform: $params;
    -ms-transform:    $params;
    transform:         $params;
}

@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
    -webkit-transition: $what $length $easing;
    -ms-transition:     $what $length $easing;
    transition:         $what $length $easing;
}

@mixin transform-origin($params) {
  -webkit-transform-origin: $params;
   -moz-transform-origin: $params;
   -ms-transform-origin: $params;
   transform-origin: $params;
}

@mixin perspective($params) {
  -webkit-perspective: $params;
  -moz-perspective: $params;
  -ms-perspective: $params;
  perspective: $params;
}

$font-path: 'fonts/';

@mixin font-face($font-name, $font-file, $font-svg, $weight: normal, $style: normal) {
  @font-face {
      font-family: $font-name;
      src: url('#{$font-path}#{$font-file}.eot');
      src: url('#{$font-path}#{$font-file}.eot?#iefix') format('embedded-opentype'),
           url('#{$font-path}#{$font-file}.svg##{$font-svg}') format('svg'),
           url('#{$font-path}#{$font-file}.woff') format('woff'),
           url('#{$font-path}#{$font-file}.ttf') format('truetype');
      font-weight: $weight;
      font-style: $style;
  }
}

@mixin animation($animation-name, $duration: 1s, $delay: .2s) {
  -webkit-animation: $animation-name $duration $delay;
          animation: $animation-name $duration $delay;
}
